<h1 class="text-center mb-3">Students App</h1>

<button onclick="toggleVisibility('form-add')" class="btn btn-primary btn-block" id="form-add-btn" style="display: block">Add Student</button>
<form class="mb-4" id="form-add" style="display: none">
    <div class="form-group">
        <br><label for="name">Name</label>
        <input type="text" id="name" class="form-control">
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" class="form-control">
    </div>
    <br>
    <input value="Add" onclick="fetchPost(document.getElementById('name').value, document.getElementById('password').value)" class="btn btn-secondary">
    <input value="Cancel" onclick="toggleVisibility('form-add')" class="btn btn-secondary">
</form>

<button class="btn btn-primary btn-block" id="form-edit-btn"  style="display: none" disabled>Edit Student</button>
<form class="mb-4" id="form-edit" style="display: none">
    <div class="form-group">
        <br><label for="name">New Name</label>
        <input type="text" id="newName" class="form-control">
    </div>
    <div class="form-group">
        <label for="password">New Password</label>
        <input type="password" id="newPassword" class="form-control">
    </div>
    <br>
    <input value="Update" onclick="fetchPatch(document.getElementById('newName').value, document.getElementById('newPassword').value)" class="btn btn-secondary">
    <input value="Cancel" onclick="toggleVisibility('form-edit')" class="btn btn-secondary">
</form>
<p class="url-handler" id="no-url-yet" style="display: none"></p>
<br>
<h3 id="notify" style="display: none; color: green">TEST</h3>
<br>

<h4>Students</h4>
<table class="table table-bordered">
<thead class="thead-dark">
    <th scope="col">ID</th>
    <th scope="col">Name</th>
    <th scope="col">Password</th>
    <th scope="col" class="text-end">Action</th>
</thead>
<tbody>
    <!-- for each student do component -->
    {{#each students}}
    <tr>
        <td scope="row">{{this._id}}</td>
        <td>{{this.name}}</td>
        <td>{{this.password}}</td>
        <td class="text-end">
            <a href="/students/{{this._id}}" type="button" class="btn btn-light btn-small"><i class="bi bi-eye"></i> View</a>
            <button onclick="toggleVisibility('form-edit', '/students/{{this._id}}')" class="btn btn-light btn-small"><i class="bi bi-pencil"></i> Edit</button>
            <button onclick="fetchDelete('/students/{{this._id}}')" class="btn btn-light btn-small"><i class="bi bi-person-x"></i> Delete</button>
        </td>
    </tr>
    {{/each}}
</tbody>
</table>

<script>
    toggleVisibility = (elementId, urlToStorage) => {
        let element2Id = ''
        document.querySelector('.url-handler').setAttribute('id', urlToStorage)
        elementId === 'form-add'? element2Id = 'form-edit' : element2Id = 'form-add'
        let btn = document.getElementById(`${elementId}-btn`)
        let btn2 = document.getElementById(`${element2Id}-btn`)
        let element = document.getElementById(elementId)
        let element2 = document.getElementById(element2Id)

        if (elementId === 'form-add') {
            element.style.display == 'block' ?
                element.style.display = 'none' :
                element.style.display = 'block'
        } else {
            btn.style.display == 'block' ?
                btn.style.display = 'none' :
                btn.style.display = 'block'

            btn2.style.display == 'block' ?
                btn2.style.display = 'none' :
                btn2.style.display = 'block'

            element.style.display == 'block' ?
                element.style.display = 'none' :
                element.style.display = 'block'

            if (element2.style.display == 'block') {
                element2.style.display = 'none'
            }
        }
    }

    fetchDelete = (url) => {
        fetch(url, { method: 'DELETE' })
            .then((response) => {
                if (response.status !== 200) {
                    console.log('Error, status Code: ', response.status)
                    return
                }
                response.json().then(() => notifyWith('Student deleted'))
            })
            .catch((err) => console.log('Fetch Error: ', err))
    }

    fetchPatch = (name, pword) => {
        let urlFromStorage = document.querySelector('.url-handler').getAttribute('id')
        
        fetch(new Request(urlFromStorage, {
            method: 'PATCH',
            headers: { 'content-type': 'application/json' },
            body: JSON.stringify({
                name: name,
                password: pword
            })
        }))
            .then((response) => {
                if (response.status !== 200) {
                    console.log('Error with status code: ', response.status)
                    return
                }
                response.json().then(() => notifyWith('Student updated'))
            })
            .catch((err) => console.log('Fetch Error: ', err))
    }

    fetchPost = (name, pword) => {
        let url = '/students'
        
        fetch(new Request(url, {
            method: 'POST',
            headers: { 'content-type': 'application/json' },
            body: JSON.stringify({
                name: name,
                password: pword
            })
        }))
            .then((response) => {
                if (response.status !== 200) {
                    console.log('Error with status code: ', response.status)
                    return
                }
                response.json().then(notifyWith(`New student ${name} added`))
            })
            .catch((err) => console.log('Fetch Error: ', err))
    }

    notifyWith = (data) => {
        document.getElementById('notify').innerHTML = data
        document.getElementById('notify').style.display = 'block'
        setTimeout(() => window.location.reload(), 2000)
    }
</script>